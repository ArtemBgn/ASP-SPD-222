@{
    ViewData["Title"] = "Razor";
}

<h1 class="display-4">Синтаксис Razor</h1>
<p>
    Razor - технологія впровадження в HTML можливостей мови програмування.
    Умовно, можливості Razor поділяються на вирази та інструкції.
    Основу синтаксису складає символ "&commat;" через що до HTML ей символ слід вставляти через сутність <b>&amp;commat;</b>.
    Однак, Razor розпізнає адреси емаіл,, у них цей символ замінювати не трреба.
</p>
<p>
    Вирази - мають результат. Razor-вирази його відображають. Якщо вираз простий, 
    наприклад виведення змінної, то додаткових конструкцій не треба, просто зазначається
    <code>&commat;x</code>. Для більш складних вживаються круглі дужки: <code>&commat;(2+3)</code>.
</p>
<p>
    Інструкції - це без результату, який треба виводити. Інструкції Разор беруться у фігурні дужки.
    <code>&commat;{...}</code>. У дужках всі інструкції слідують синтаксису мови (C#).
    Змінні, оголошені у таких блоках доступні по cshtml-документу.Деякі інструкції 
    теж можна не обмежувати дужками, зокрема:
</p>
@{
    int x = 10;
    String str = "Hello";
}
<p>
    умовні конструкції <code>&commat;if</code>
    @if(x==10)
    {
        int y = x;
        <b>x меньший за @y</b>
    }
    else
    {
        <b>x не меньший за 10</b>
    }
    У конструкціях такого типу Разор сам намагається визначати що є інструкцією
    мови, а що кодом HTML. Як правило це розпізнається за тегами.
</p>
<p>
    Циклічні конструкції <code>&commat;while</code>.
    
</p>
<ul>
    @while (str.Length > 0)
    {
        <li>@str</li>
        str = str[..(str.Length - 1)];
    }
</ul>
<p>
    Також у проекті є "суперглобальні" масиви, за допомогою яких
    можна передавати дані від контролера до представленя.
    ViewData["formController"] = @ViewData["formController"]
</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>